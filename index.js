// ‡πÉ‡∏ä‡πâ ES module
import { Client, GatewayIntentBits, EmbedBuilder, Partials, Events, ButtonBuilder, ActionRowBuilder, ButtonStyle } from 'discord.js';
import express from 'express';
import dotenv from 'dotenv';
dotenv.config();

// ‡∏™‡∏£‡πâ‡∏≤‡∏á client
const client = new Client({
  intents: [
    GatewayIntentBits.Guilds,
    GatewayIntentBits.GuildMessages,
    GatewayIntentBits.GuildMembers,
    GatewayIntentBits.MessageContent
  ],
  partials: [Partials.Message, Partials.Channel, Partials.GuildMember]
});

// Express server ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö UptimeRobot
const app = express();
app.get('/', (req, res) => res.send('Bot is live!'));
app.listen(3000, () => console.log('‚úÖ Website is live'));

// ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ö‡∏≠‡∏ó‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå
client.once('ready', () => {
  console.log(`‚úÖ Logged in as ${client.user.tag}`);
});

// ‡∏™‡πà‡∏á Embed ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏´‡∏°‡πà
client.on('guildMemberAdd', async member => {
  const channelId = '1370090269671952424'; // üîÅ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô Channel ID ‡∏à‡∏£‡∏¥‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
  const channel = member.guild.channels.cache.get(channelId);
  if (!channel) return;

  const welcomeEmbed = new EmbedBuilder()
    .setColor(0x00AE86)
    .setTitle('üéâ ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö!')
    .setDescription(`‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö <@${member.id}> ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå!`)
    .setThumbnail(member.user.displayAvatarURL({ dynamic: true }))
    .setTimestamp();

  channel.send({ embeds: [welcomeEmbed] });
});

// ‡∏ü‡∏±‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
client.on('messageCreate', async (message) => {
  if (message.author.bot) return;

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡πÄ‡∏•‡∏Ç‡∏´‡πâ‡∏≠‡∏á ‡πÄ‡∏ä‡πà‡∏ô XVN645
  const roomCodeRegex = /^[A-Z0-9]{6}$/;
  const code = message.content.trim().toUpperCase();

  if (roomCodeRegex.test(code)) {
    const embed = new EmbedBuilder()
      .setColor(0x00AEFF)
      .setTitle(`üéÆ ‡πÄ‡∏à‡∏≠‡∏´‡πâ‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß: ${code}`)
      .setDescription(`‡∏°‡∏µ‡πÉ‡∏Ñ‡∏£‡∏™‡∏ô‡πÉ‡∏à‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏Å‡∏°‡∏ô‡∏µ‡πâ‡πÑ‡∏´‡∏°?\n‡∏£‡∏´‡∏±‡∏™‡∏´‡πâ‡∏≠‡∏á: **${code}**\n\nüí¨ ‡∏£‡∏µ‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏ï‡πá‡∏°!`)
      .setFooter({ text: '‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°‡πÇ‡∏î‡∏¢ Valorant Bot' })
      .setTimestamp();

    await message.channel.send({ embeds: [embed] });
    return;
  }

  // ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á !rank ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó
  if (message.content === '!rank') {
    const ranks = [
      'ü™ô Iron', 'ü™® Bronze', 'üß± Silver',
      'ü•â Gold', 'Platinum', 'Diamond',
      'Ascendant', 'Immortal', 'Radiant'
    ];

    const buttons = ranks.map(rank =>
      new ButtonBuilder()
        .setCustomId(`rank_${rank}`)
        .setLabel(rank)
        .setStyle(ButtonStyle.Primary)
    );

    const rows = [];
    for (let i = 0; i < buttons.length; i += 5) {
      rows.push(new ActionRowBuilder().addComponents(buttons.slice(i, i + 5)));
    }

    await message.channel.send({
      content: 'üéñÔ∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏¢‡∏®‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì:',
      components: rows
    });
  }
});

// ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Rank
client.on(Events.InteractionCreate, async (interaction) => {
  if (!interaction.isButton()) return;

  if (interaction.customId.startsWith('rank_')) {
    const selectedRank = interaction.customId.replace('rank_', '');
    const role = interaction.guild.roles.cache.find(r => r.name === selectedRank);

    if (!role) {
      return interaction.reply({ content: `‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö Role ‡∏ä‡∏∑‡πà‡∏≠ "${selectedRank}"`, ephemeral: true });
    }

    const member = interaction.guild.members.cache.get(interaction.user.id);
    if (!member) return;

    await member.roles.add(role);
    await interaction.reply({ content: `‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° Role **${selectedRank}** ‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏•‡πâ‡∏ß`, ephemeral: true });
  }
});

// ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏£‡∏±‡∏ô‡∏ö‡∏≠‡∏ó
client.login(process.env.TOKEN);
